@page "/blog"
<PageTitle>PageBlog</PageTitle>

<span>Count : @Blogs.Count</span>
<div class="mb-3">
    <label class="form-label">Title</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogTitle">
</div>
<div class="mb-3">
    <label class="form-label">Author</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogAuthor">
</div>
<div class="mb-3">
    <label class="form-label">Content</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogContent">
</div>

@if(requestModel.BlogId is null)
{
    <button type="button" class="btn btn-primary" @onclick="Save">Save</button>
}
else if (requestModel.BlogId is not null)
{
    <button type="button" class="btn btn-primary" @onclick="Update">Update</button>
}

@* <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button> *@

@if(Blogs is not null)
{
    int count = 0;
    <table class="table">
        <thead>
            <tr>
                <th>No</th>
                <th>ID</th>
                <th>Title</th>
                <th>Author</th>
                <th>Content</th>
                <th></th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Blogs)
            {
                <tr>
                    <td>@(++count)</td>                    
                    <td>@item.BlogId</td>                    
                    <td>@item.BlogTitle</td>                    
                    <td>@item.BlogAuthor</td>                    
                    <td>@item.BlogContent</td>                                        
                    <td>
                        <button type="button" class="btn btn-success" @onclick="() => Edit(item.BlogId)">Edit</button>
                        <button type="button" class="btn btn-danger" @onclick="() => Delete(item.BlogId)">Delete</button>
                    </td>                                        
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private BlogModel requestModel = new();
    private List<BlogModel> Blogs = new List<BlogModel>();

    private void Save()
    {
        requestModel.BlogId = Guid.NewGuid().ToString();
        Blogs.Add(requestModel);
        requestModel = new();
    }

    private void Edit(string id)
    {
        var item = Blogs.FirstOrDefault(x => x.BlogId == id);
        if (item is null) return;

        requestModel.BlogId = item.BlogId;
        requestModel.BlogTitle = item.BlogTitle;
        requestModel.BlogAuthor = item.BlogAuthor;
        requestModel.BlogContent = item.BlogContent;
    }

    private void Update()
    {
        int index = Blogs.FindIndex(x => x.BlogId == requestModel.BlogId);
        if (index == -1) return;

        Blogs[index] = requestModel;
        requestModel = new();
    }

    private void Delete(string id)
    {
        int index = Blogs.FindIndex(x => x.BlogId == id);
        if (index == -1) return;

        Blogs.RemoveAt(index);
    }

}
